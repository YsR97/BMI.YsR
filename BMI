import React, { useState } from 'react';

const BMICalculator = () => {
  const [height, setHeight] = useState('');
  const [weight, setWeight] = useState('');
  const [bmi, setBmi] = useState(null);
  const [category, setCategory] = useState('');
  const [units, setUnits] = useState('metric'); // 'metric' or 'imperial'
  
  const calculateBMI = () => {
    if (!height || !weight) {
      alert('Please enter both height and weight');
      return;
    }
    
    let bmiValue;
    
    if (units === 'metric') {
      // Metric formula: BMI = weight(kg) / height(m)²
      const heightInMeters = height / 100;
      bmiValue = weight / (heightInMeters * heightInMeters);
    } else {
      // Imperial formula: BMI = 703 × weight(lb) / height(in)²
      bmiValue = 703 * weight / (height * height);
    }
    
    setBmi(bmiValue.toFixed(1));
    
    // Determine BMI category
    if (bmiValue < 18.5) {
      setCategory('Underweight');
    } else if (bmiValue < 25) {
      setCategory('Normal weight');
    } else if (bmiValue < 30) {
      setCategory('Overweight');
    } else {
      setCategory('Obesity');
    }
  };
  
  const handleReset = () => {
    setHeight('');
    setWeight('');
    setBmi(null);
    setCategory('');
  };
  
  const toggleUnits = () => {
    setUnits(units === 'metric' ? 'imperial' : 'metric');
    setHeight('');
    setWeight('');
    setBmi(null);
    setCategory('');
  };
  
  return (
    <div className="max-w-md mx-auto p-6 bg-white rounded-lg shadow-lg">
      <h1 className="text-2xl font-bold text-center mb-6">BMI Calculator</h1>
      
      <div className="mb-4">
        <button 
          onClick={toggleUnits}
          className="w-full py-2 px-4 bg-blue-500 text-white rounded hover:bg-blue-600 transition"
        >
          Switch to {units === 'metric' ? 'Imperial (lb/in)' : 'Metric (kg/cm)'} Units
        </button>
      </div>
      
      <div className="mb-4">
        <label className="block text-gray-700 mb-2">
          {units === 'metric' ? 'Height (cm)' : 'Height (inches)'}
        </label>
        <input
          type="number"
          value={height}
          onChange={(e) => setHeight(e.target.value)}
          className="w-full p-2 border rounded"
          placeholder={units === 'metric' ? 'Enter height in cm' : 'Enter height in inches'}
        />
      </div>
      
      <div className="mb-6">
        <label className="block text-gray-700 mb-2">
          {units === 'metric' ? 'Weight (kg)' : 'Weight (pounds)'}
        </label>
        <input
          type="number"
          value={weight}
          onChange={(e) => setWeight(e.target.value)}
          className="w-full p-2 border rounded"
          placeholder={units === 'metric' ? 'Enter weight in kg' : 'Enter weight in pounds'}
        />
      </div>
      
      <div className="flex space-x-4 mb-6">
        <button
          onClick={calculateBMI}
          className="flex-1 py-2 px-4 bg-green-500 text-white rounded hover:bg-green-600 transition"
        >
          Calculate BMI
        </button>
        <button
          onClick={handleReset}
          className="flex-1 py-2 px-4 bg-gray-500 text-white rounded hover:bg-gray-600 transition"
        >
          Reset
        </button>
      </div>
      
      {bmi && (
        <div className="p-4 bg-blue-50 rounded-lg">
          <h2 className="text-xl font-semibold mb-2">Your Results</h2>
          <div className="mb-2">
            <span className="font-medium">BMI: </span>
            <span className="text-lg">{bmi}</span>
          </div>
          <div className="mb-2">
            <span className="font-medium">Category: </span>
            <span 
              className={`text-lg font-bold ${
                category === 'Underweight' ? 'text-blue-500' :
                category === 'Normal weight' ? 'text-green-500' :
                category === 'Overweight' ? 'text-yellow-500' :
                'text-red-500'
              }`}
            >
              {category}
            </span>
          </div>
          <p className="text-sm text-gray-600 mt-2">
            BMI provides a simple numeric measure of a person's thickness or thinness.
            Note that BMI is not a diagnostic tool and has limitations. Consult a healthcare
            provider for proper evaluation.
          </p>
        </div>
      )}
      
      <div className="mt-6 text-xs text-gray-500">
        <p>BMI Categories:</p>
        <ul className="list-disc pl-5 mt-1">
          <li>Underweight: BMI less than 18.5</li>
          <li>Normal weight: BMI 18.5 to 24.9</li>
          <li>Overweight: BMI 25 to 29.9</li>
          <li>Obesity: BMI 30 or greater</li>
        </ul>
      </div>
    </div>
  );
};

export default BMICalculator;
